"use strict";
cc._RF.push(module, 'df9a7oGEVhBtYhmc+KYGzNR', 'game');
// Scripts/sdk_readygo/lib/game.js

"use strict";
function _interopRequireDefault(e) {
  return e && e.__esModule ? e : { default: e };
}function _classCallCheck(e, a) {
  if (!(e instanceof a)) throw new TypeError("Cannot call a class as a function");
}function _getBannerJson(e, a) {
  try {
    var t = new Date().getTime();wx.setStorageSync("lastGetBannerTime", t), gameSdk.gameHttp(_config2.default.api + "game/getSwitchConfig?appId=" + _config2.default.appId, "", "GET").then(function (a) {
      bannerInfo = a.data, e && e(bannerInfo);
    }).catch(function (e) {
      a && a(e);
    });
  } catch (e) {
    a && a(e);
  }
}function myLog(e) {
  logStatus && console.log(e);
}function http(e, a, t) {
  try {
    return new Promise(function (n, o) {
      var r = wx.getStorageSync("sessionId") || "";wx.request({ url: _config2.default.api + t, data: e, method: a, header: { "content-type": "application/json", "session-id": r }, success: function success(e) {
          0 == e.data.code ? n(e.data) : o(e.data);
        }, fail: function fail(e) {
          o(e);
        } });
    });
  } catch (e) {
    myLog(e);
  }
}function Checkparam(e) {
  myLog(e);for (var a in e) {
    if (null == e[a] || "" == e[a] || "undefined" == e[a]) return -1;
  }return 1;
}function getErrparamData(e) {
  return myLog(e), { code: -10111, data: "", msg: e };
}function gameLogin(e, a) {
  try {
    wx.login({ success: function success(t) {
        var n = t.code,
            o = { code: n, appId: _config2.default.appId, sdkVersion: sdkVersion };if (1 == Checkparam(o)) http(o, "POST", "user/login").then(function (t) {
          if (0 == t.code) {
            if (wx.setStorageSync("uid", t.data.openId), !t.data.isNeedUpdateUserInfo) {
              myLog("保存了sessionId" + t.data.sessionId), wx.setStorageSync("sessionId", t.data.sessionId);var n = JSON.stringify(t.data.userInfo);wx.setStorageSync("gameUserInfo", n), _getBannerJson();
            }e(t);
          } else a(t);
        }, function (e) {
          a(e);
        });else {
          var r = "前端检查参数不正确" + JSON.stringify(o),
              i = getErrparamData(r);a(i);
        }
      }, fail: function fail(e) {
        a(e);
      } });
  } catch (e) {
    a(e);
  }
}function getPlatForm() {
  try {
    var e = wx.getSystemInfoSync();return myLog({ name: "当前设备", info: e }), 0 == e.system.indexOf("iOS") ? "ios" : 0 == e.system.indexOf("Android") ? "android" : e.system.length > 10 ? e.system.substring(0, 10) : e.system;
  } catch (e) {
    return myLog(e), "error";
  }
}function getCodeImg(e, a, t, n, o, r) {
  try {
    var i = { openId: wx.getStorageSync("uid"), appId: _config2.default.appId, coin: e, gameCoin: a, gameCoinName: t, param: n };if (1 == Checkparam(i)) {
      http({ codeBody: JSON.stringify(i) }, "POST", "gamepay/createWXACode").then(function (e) {
        var a = e.data;wx.previewImage({ current: a, urls: [a], success: function success(e) {
            myLog(e), o(e);
          }, fail: function fail(e) {
            r(e);
          } });
      }, function (e) {
        r(e);
      });
    } else {
      var d = "前端检查参数不正确" + JSON.stringify(i),
          c = getErrparamData(d);r(c);
    }
  } catch (e) {
    myLog(e);
  }
}function midasPay(e, a, t) {
  try {
    var n = Checkparam(e);if (1 == gameSdk.midasPayCheckIng) {
      console.log("限制在支付成功后轮询成功前不允许重复下单支付 midasPay"), wx.showToast({ title: "您有订单正在处理中，请稍后再试", icon: "none", duration: 2e3 });var o = getOrderStatus(_code2.default.payUnEnd);return void t(o);
    }if (1 == n) http(e, "POST", "gamepay/addCoinOrder").then(function (e) {
      myLog({ name: "成功获取订单", res: e });var n = e.data;orderCode = e.data.orderCode;var o = e.data.buyQuantity;waitOrderTime = 1, 0 == o ? (gameSdk.midasPaying = !1, gameSdk.midasPayCheckIng = !0, checkOrder(a, t)) : (console.log("midasPaytime====真正的米大师支付时间", Date.now(), "midasPayStatus==" + gameSdk.midasPaying), wx.requestMidasPayment({ mode: n.mode, env: n.env, offerId: n.offerId, currencyType: n.currencyType, platform: n.platform, buyQuantity: o, zoneId: n.zoneId, success: function success(e) {
          myLog({ name: "成功回调", res: e }), checkOrder(a, t), gameSdk.midasPaying = !1, gameSdk.midasPayCheckIng = !0;
        }, fail: function fail(e) {
          console.log("米大师错误返回:", e);var a = {};e.errCode ? (cancelPay(e.errCode), a = getOrderStatus(_code2.default.payError, e)) : a = getOrderStatus(_code2.default.unknowError), t(a);
        } }));
    }).catch(function (e) {
      myLog({ name: "获取订单失败", res: e }), 40121 == e.code && wx.showToast({ title: e.msg, icon: "none", duration: 2e3 }), t(e);
    });else {
      var r = "前端检查参数不正确" + JSON.stringify(e),
          i = getErrparamData(r);t(i);
    }
  } catch (e) {
    t(e);
  }
}function checkOrder(e, a) {
  try {
    timer = setInterval(function () {
      var t = wx.getStorageSync("sessionId");if (myLog("订单号:" + orderCode + "--appId:" + _config2.default.appId + "--sessionId:" + t + "---waitOrderTime:" + waitOrderTime + "---midasPayErrorNum:" + gameSdk.midasPayErrorNum), waitOrderTime > 120) {
        myLog("state=5"), clearInterval(timer), gameSdk.midasPayCheckIng = !1, waitOrderTime = 1;var n = getOrderStatus(_code2.default.paySuccessDelay);return void e(n);
      }if (1 == gameSdk.midasPayRequestIng) return void (waitOrderTime += 1);gameSdk.midasPayRequestIng = !0, http("", "GET", "gamepay/getCoinOrderStatus?orderCode=" + orderCode + "&appId=" + _config2.default.appId).then(function (t) {
        myLog({ name: "成功回调", "回调参数": t }), gameSdk.midasPayRequestIng = !1;var n = t.data;if (1 == n.pay_status) {
          myLog("pay_status=1"), clearInterval(timer), gameSdk.midasPayCheckIng = !1, waitOrderTime = 1;var o = getOrderStatus(_code2.default.paySuccess);return void e(o);
        }if (0 == n.pay_status && (myLog("pay_status=0"), waitOrderTime += 1), 0 != n.order_status) {
          myLog("order_status=2"), clearInterval(timer), gameSdk.midasPayCheckIng = !1, waitOrderTime = 1;var r = getOrderStatus(_code2.default.orderCancel);a(r);
        }
      }).catch(function (e) {
        gameSdk.midasPayErrorNum++, gameSdk.midasPayErrorNum > 119 && (gameSdk.midasPayErrorNum = 0, clearInterval(timer), gameSdk.midasPayCheckIng = !1), e.code && e.code == _code2.default.illegalOrderError.code && (clearInterval(timer), gameSdk.midasPayCheckIng = !1, a(e)), myLog({ name: "错误回调", "回调参数": e }), gameSdk.midasPayRequestIng = !1, waitOrderTime = 1;
      });
    }, 1e3);
  } catch (e) {
    a(e);
  }
}function getOrderStatus(e, a) {
  try {
    var t = e;return a && (t.nativeCode = a.errCode, t.msg = a.errMsg), console.log("米大师支付状态:,", t), t;
  } catch (e) {
    console.log(e);
  }
}function cancelPay(e) {
  http({ orderCode: orderCode, midasErrorCode: e }, "POST", "gamepay/cancelCoinOrder").then(function (e) {
    console.log("用户支付失败已告知服务器");
  }, function (e) {});
}function wxGetUserInfo(e, a) {
  try {
    wx.getUserInfo({ withCredentials: !0, lang: "zh_CN", success: function success(t) {
        var n = { encryptedData: t.encryptedData, iv: t.iv };gameSdk.authorize(n, e, a);
      }, fail: function fail(t) {
        wx.getSetting({ success: function success(t) {
            t.authSetting["scope.userInfo"] || wx.showModal({ title: "警告", content: "您点击了拒绝授权，将无法正常使用小游戏的功能体验，请授权重新进入。", showCancel: !1, success: function success(t) {
                t.confirm && wx.openSetting({ success: function success(t) {
                    myLog(t), wxGetUserInfo(e, a);
                  }, fail: function fail(t) {
                    var n = wx.createOpenSettingButton({ type: "text", text: "打开设置页面", style: { left: windowWidth / 2 - 100, top: windowHeight / 2 - 20, width: 200, height: 40, lineHeight: 40, backgroundColor: "#ff0000", color: "#ffffff", textAlign: "center", fontSize: 16, borderRadius: 4 } });n.onTap(function () {
                      n.hide(), wxGetUserInfo(e, a);
                    });
                  } });
              } });
          } });
      } });
  } catch (e) {
    a(e);
  }
}Object.defineProperty(exports, "__esModule", { value: !0 });var _createClass = function () {
  function e(e, a) {
    for (var t = 0; t < a.length; t++) {
      var n = a[t];n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);
    }
  }return function (a, t, n) {
    return t && e(a.prototype, t), n && e(a, n), a;
  };
}(),
    _config = require("./config.js"),
    _config2 = _interopRequireDefault(_config),
    _code = require("./code.js"),
    _code2 = _interopRequireDefault(_code),
    sdkVersion = "1.0.6",
    logStatus = !0,
    timer = null,
    orderCode = "",
    waitOrderTime = 1,
    windowWidth = window.innerWidth,
    windowHeight = window.innerHeight,
    bannerInfo = {},
    gameSdk = function () {
  function e() {
    _classCallCheck(this, e);
  }return _createClass(e, null, [{ key: "createUserInfoBtn", value: function value(e, a, t, n, o, r) {
      try {
        var i = wx.getSystemInfoSync();if (console.log(i), console.log("是否为iphone:" + i.system.toLocaleLowerCase().includes("ios")), myLog("SDK版本号:" + i.SDKVersion), i.SDKVersion < "2.0.6") return void wxGetUserInfo(o, r);if (i.system.toLocaleLowerCase().includes("ios") && i.version < "6.6.7" && i.SDKVersion < "2.1.0") return void wxGetUserInfo(o, r);var d = wx.createUserInfoButton({ type: e, text: a, image: t, style: n, withCredentials: !0, lang: "zh_CN" });o({ code: 1, data: d, msg: "success" });
      } catch (e) {
        wxGetUserInfo(o, r);
      }
    } }, { key: "pay", value: function value(a, t, n, o, r, i) {
      try {
        var d = this;if (e.midasPaying) return void console.log("并发调用拦截 midasPay");e.midasPaying = !0, wx.login({ success: function success(c) {
            console.log(c);var s = c.code,
                u = { code: s, appId: _config2.default.appId };d.gameHttp(_config2.default.api + "login/checkOrRefreshSessionkey", u, "POST").then(function (d) {
              http("", "GET", "gamepay/getGamePayType?os=" + getPlatForm() + "&appId=" + _config2.default.appId).then(function (d) {
                myLog(d);var c = d.data;if ("midas" != c && (e.midasPaying = !1), "wxpay" == c) getCodeImg(a, t, n, o, r, i);else if ("midas" == c) {
                  myLog("midasPay");var s = { coin: a, gameCoinName: n, gameCoin: t, param: o, payType: "midas", purpose: 2, appId: _config2.default.appId },
                      u = function u(a) {
                    e.midasPaying = !1, r && r(a);
                  },
                      g = function g(a) {
                    e.midasPaying = !1, i && i(a);
                  };midasPay(s, u, g);
                } else if ("none" == c) {
                  myLog("pay none");var f = { code: 10406, data: "none", msg: "当前暂不支持充值" };i(f);
                } else i(d);
              }, function (a) {
                e.midasPaying = !1, i(a);
              });
            }).catch(function (a) {
              i(a), e.midasPaying = !1;
            });
          }, fail: function fail(a) {
            e.midasPaying = !1, i(a);
          } });
      } catch (a) {
        e.midasPaying = !1, i(a);
      }
    } }, { key: "login", value: function value(e, a) {
      myLog({ name: "logName", time: "00:00" }), gameLogin(e, a);
    } }, { key: "authorize", value: function value(e, a, t) {
      try {
        var n = wx.getStorageSync("uid"),
            o = { encryptedData: e.encryptedData, iv: e.iv, openId: n, appId: _config2.default.appId };if (1 == Checkparam(o)) http(o, "POST", "user/update").then(function (e) {
          gameLogin(a, t);
        }, function (e) {
          t(e);
        });else {
          var r = "前端检查参数不正确" + JSON.stringify(o),
              i = getErrparamData(r);t(i);
        }
      } catch (e) {
        t(e);
      }
    } }, { key: "gameHttp", value: function value(e, a, t) {
      try {
        return "GET" == t && (e = this.stringify(e, a)), new Promise(function (n, o) {
          var r = wx.getStorageSync("sessionId") || "";wx.request({ url: e, data: a, method: t, header: { "content-type": "application/json", "session-id": r }, success: function success(e) {
              var a = e.data.code;e.data.data.code && (a = e.data.data.code), 0 == a ? n(e.data) : o(e.data);
            }, fail: function fail(e) {
              o(e);
            } });
        });
      } catch (e) {
        myLog(e);
      }
    } }, { key: "getMysteryGift", value: function value(e, a, t) {
      this.gameHttp(_config2.default.api + "share/readSelfNotice?noticeId=" + e, "", "GET").then(function (e) {
        a(e);
      }).catch(function (e) {
        t(e);
      });
    } }, { key: "stringify", value: function value(e, a) {
      var t = 0;for (var n in a) {
        0 == t ? (e = e + "?" + n + "=" + a[n], t++) : e = e + "&" + n + "=" + a[n];
      }return e;
    } }, { key: "getOpenId", value: function value() {
      return wx.getStorageSync("uid");
    } }, { key: "checkBannerSwitch", value: function value(e, a) {
      try {
        (new Date().getTime() - wx.getStorageSync("lastGetBannerTime")) / 1e3 / 60 > 10 ? "{}" == JSON.stringify(bannerInfo) ? _getBannerJson(e, a) : (e(bannerInfo), _getBannerJson()) : "{}" == JSON.stringify(bannerInfo) ? _getBannerJson(e, a) : e(bannerInfo);
      } catch (e) {
        a(e);
      }
    } }, { key: "decryptShareTicket", value: function value(e, a, t, n) {
      try {
        var o = { iv: e, encryptedData: a, appId: _config2.default.appId };this.gameHttp(_config2.default.api + "user/decryptWXData", o, "POST").then(function (e) {
          t(e);
        }).catch(function (e) {
          n(e);
        });
      } catch (e) {
        n(e);
      }
    } }]), e;
}();gameSdk.midasPaying = !1, gameSdk.midasPayCheckIng = !1, gameSdk.midasPayRequestIng = !1, gameSdk.midasPayErrorNum = 0, exports.default = gameSdk;

cc._RF.pop();
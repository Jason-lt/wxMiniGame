{"version":3,"sources":["TCPClient.js"],"names":["tywx","TCPClient","TAG","CONNECT_STATUS_OK","CONNECT_STATUS_OPENING","CONNECT_STATUS_CLOSING","CONNECT_STATUS_FAIL","connectStatus","isTimerInited","tickCount","filterCmds","timerSchedule","NotificationCenter","trigger","EventType","SEND_HEART_BEAT","reconnet","startCheckTimer","Timer","setTimer","cc","director","stopCheckTimer","cancelTimer","connect","url","IsWechatPlatform","doWechatConnect","wx","connectSocket","onSocketOpen","res","LOGD","TCP_OPENED","onSocketError","TCP_ERROR","onSocketClose","TCP_CLOSE","onSocketMessage","StateInfo","isOnForeground","content","decodeMessage","msgStr","unescape","replace","strJson","substr","length","_json","JSON","parse","indexOf","cmd","TCP_RECEIVE","data","ArrayBuffer","databytes","Uint8Array","i","len","tmpc","String","fromCharCode","EncodeDecode","base64Decode","mask","slice","charcode","result","utf8Decode","TCP_RECONNECT","SystemInfo","webSocketUrl","sendMsg","stringify","sendSocketMessage","success","params","arguments","fail","errMsg","closeSocket","complete","close"],"mappings":"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","file":"TCPClient.js","sourceRoot":"../../../../../assets/Scripts/CommonFrame","sourcesContent":["/**\n * 微信小程序下TCP长连接使用websocket实现\n */\n\ntywx.TCPClient = {\n    TAG : \"TCP client\",\n    CONNECT_STATUS_OK : 1,\n    CONNECT_STATUS_OPENING : 2,\n    CONNECT_STATUS_CLOSING : 3,\n    CONNECT_STATUS_FAIL : 0,\n    connectStatus : 0,\n    isTimerInited : false,\n    tickCount : 0,\n    filterCmds : ['heart_beat'],\n\n    /**\n     * 该方法包含了心跳和tcp状态检查两项功能,结合connect中的逻辑,是一个无限重试的机制\n     */\n    timerSchedule : function() {\n        tywx.TCPClient.tickCount = (tywx.TCPClient.tickCount + 1) % 3;\n        if (tywx.TCPClient.tickCount == 2 && tywx.TCPClient.connectStatus == tywx.TCPClient.CONNECT_STATUS_OK) {\n            //每3秒发送心跳\n            //hall.MsgFactory.sendHeartBeat();\n            //监听者进行具体的协议实现\n            tywx.NotificationCenter.trigger(tywx.EventType.SEND_HEART_BEAT);\n        }\n\n        // 每1秒检查一下长连接，如果不通，则重连。\n        tywx.TCPClient.reconnet();\n    },\n\n    startCheckTimer: function() {\n        tywx.TCPClient.isTimerInited = true;\n        tywx.Timer.setTimer(cc.director, this.timerSchedule, 1);\n    },\n\n    stopCheckTimer: function() {\n        tywx.TCPClient.isTimerInited = false;\n        tywx.Timer.cancelTimer(cc.director, this.timerSchedule);\n    },\n\n    //以下为websocket连接相关方法\n    connect: function(url){\n        //tywx.BiLog.clickStat(tywx.UserInfo.clickStatEventType.clickStatEventTypeTCP_Start, [url]);\n        if (tywx.TCPClient.connectStatus == tywx.TCPClient.CONNECT_STATUS_OPENING\n            || tywx.TCPClient.connectStatus == tywx.TCPClient.CONNECT_STATUS_OK) {\n            return;\n        }\n\n        tywx.TCPClient.connectStatus = tywx.TCPClient.CONNECT_STATUS_OPENING;\n        if(tywx.IsWechatPlatform()) {\n            this.doWechatConnect();\n        }\n    },\n\n    doWechatConnect: function() {\n        if(!tywx.IsWechatPlatform()) {\n            return;\n        }\n        wx.connectSocket({\n            url: url\n        });\n\n        wx.onSocketOpen(function(res) {\n            tywx.LOGD(tywx.TCPClient.TAG, 'TCP webSocket opened...');\n            tywx.TCPClient.connectStatus = tywx.TCPClient.CONNECT_STATUS_OK;\n\n            tywx.NotificationCenter.trigger(tywx.EventType.TCP_OPENED);\n\n            if (!tywx.TCPClient.isTimerInited) {\n                //启动TCP的定时检查机制,成功连接1次后将永久进行检查\n                tywx.TCPClient.startCheckTimer();\n            }\n        });\n\n        wx.onSocketError(function(res) {\n            tywx.LOGD(tywx.TCPClient.TAG, 'TCP webSocket error...');\n            //tywx.BiLog.clickStat(tywx.UserInfo.clickStatEventType.clickStatEventTypeTCP_Failed, [url]);\n\n            tywx.TCPClient.connectStatus = tywx.TCPClient.CONNECT_STATUS_FAIL;\n            tywx.NotificationCenter.trigger(tywx.EventType.TCP_ERROR);\n        });\n\n\n        wx.onSocketClose(function(res) {\n            tywx.LOGD(tywx.TCPClient.TAG, 'WebSocket 已关闭！');\n            tywx.TCPClient.connectStatus = tywx.TCPClient.CONNECT_STATUS_FAIL;\n            tywx.NotificationCenter.trigger(tywx.EventType.TCP_CLOSE);\n        });\n\n        wx.onSocketMessage(function(res) {\n            if (!tywx.StateInfo.isOnForeground){\n                //在后台不处理消息\n                return;\n            }\n            // 处理长连接的消息\n            var content = tywx.TCPClient.decodeMessage(res[\"data\"]);\n            if (content == null || content == '0000') {\n                return;\n            }\n\n            var msgStr = \"[Receive TCP Msg]: \" + unescape(content.replace(/\\\\u/gi,'%u'));\n            var strJson = content.substr(0, content.length - 0);\n            if (strJson != null && strJson.length > 0) {\n                var _json = JSON.parse(strJson);\n                if (tywx.TCPClient.filterCmds.indexOf(_json.cmd) == -1){\n                    tywx.LOGD(tywx.TCPClient.TAG, msgStr);\n                }\n\n                tywx.NotificationCenter(tywx.EventType.TCP_RECEIVE, _json);\n            }\n\n        });\n    },\n\n    decodeMessage: function(data) {\n        if (typeof ArrayBuffer != 'undefined' && data instanceof ArrayBuffer) {\n            var databytes = new Uint8Array(data);\n            var content = ''\n            for (var i = 0, len = databytes.length; i < len; i++) {\n                var tmpc = String.fromCharCode(databytes[i]);\n                content += tmpc;\n            }\n            return content;\n        }\n        var data = tywx.EncodeDecode.base64Decode(data);\n        var mask = data.slice(0, 4);\n        data = data.slice(4);\n        for (var i = 0, len = data.length; i < len; i++) {\n            var charcode = data[i];\n            charcode ^= mask[i % 4];\n            data[i] = charcode;\n        }\n        var result = tywx.EncodeDecode.utf8Decode(data);\n        return result;\n    },\n\n    reconnet:function () {\n        if (!tywx.StateInfo.isOnForeground){\n            //在后台不重连(IOS会出问题)\n            return;\n        }\n        if (tywx.TCPClient.connectStatus == tywx.TCPClient.CONNECT_STATUS_FAIL) {\n            tywx.NotificationCenter.trigger(tywx.EventType.TCP_RECONNECT);\n            tywx.TCPClient.connect(tywx.SystemInfo.webSocketUrl);\n        }\n    },\n\n    sendMsg: function(data) {\n        if (tywx.TCPClient.connectStatus != tywx.TCPClient.CONNECT_STATUS_OK) {\n            return;\n        }\n\n        var msgStr = JSON.stringify(data);\n        if (tywx.TCPClient.filterCmds.indexOf(data.cmd) == -1){\n            tywx.LOGD(tywx.TCPClient.TAG, 'TCP sendMsg:' + msgStr);\n        }\n\n        if(tywx.IsWechatPlatform()) {\n            wx.sendSocketMessage({\n                data:msgStr,\n                success: function(params){\n                    tywx.LOGD(tywx.TCPClient.TAG, 'TCP sendMsg success:' + JSON.stringify(arguments));\n                },\n\n                fail: function(params) {\n                    var errMsg = arguments[0];\n                    if (errMsg && errMsg['errMsg'] === 'sendSocketMessage:fail taskID not exist'){\n                        wx.closeSocket();\n                        tywx.TCPClient.connectStatus = tywx.TCPClient.CONNECT_STATUS_FAIL;\n                    }\n                    tywx.LOGD(tywx.TCPClient.TAG, 'TCP sendMsg fail:' + JSON.stringify(arguments));\n                },\n\n                complete: function(params) {\n                }\n            });\n        }\n    },\n\n    close: function(){\n        tywx.TCPClient.connectStatus = tywx.TCPClient.CONNECT_STATUS_CLOSING;\n        if(tywx.IsWechatPlatform()) {\n            wx.closeSocket();\n        }\n        tywx.TCPClient.stopCheckTimer();\n        tywx.LOGD(tywx.TCPClient.TAG, 'TCP close..............');\n    }\n};\n"]}
{"version":3,"sources":["../../../../../assets/Scripts/common/assets/Scripts/common/myUtil.js"],"names":["myUtil","randomForArray","arr","length","Math","floor","random","randomForMinAndMax","min","max","clampValue","value","randomForWeight","weights","Global","gridRandomScores","i","weight","parseInt","j","push","id","getSecondString","num","per","getPercentString","socre","perStr","getImgBase64","target","cc","find","width","height","renderTexture","RenderTexture","begin","_sgNode","visit","end","canvas","document","createElement","ctx","getContext","_renderType","game","RENDER_TYPE_CANVAS","texture","getSprite","getTexture","image","getHtmlElementObj","drawImage","RENDER_TYPE_WEBGL","buffer","gl","createFramebuffer","bindFramebuffer","FRAMEBUFFER","_glID","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","data","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","rowBytes","row","srow","data2","Uint8ClampedArray","imageData","ImageData","putImageData","log","toDataURL","module","exports"],"mappings":"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","file":"myUtil.js","sourceRoot":"../../../../../assets/Scripts/common","sourcesContent":["var myUtil = {\n    //随机输出数组中的一项\n    randomForArray: function (arr) {\n        if (!arr || arr.length == 0) {\n            return 0;\n        }\n\n        return arr[Math.floor(Math.random() * arr.length)];\n    },\n\n    //在某一范围内随机\n    randomForMinAndMax: function (min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    //限制value值的大小\n    clampValue: function (value, min, max) {\n        if (value < min) {\n            return min;\n        } else if (value > max) {\n            return max;\n        } else {\n            return value;\n        }\n    },\n\n    //根据权重随机\n    randomForWeight: function (weights) {\n        Global.gridRandomScores = [];\n        for (var i in weights) {\n            var weight = parseInt(weights[i].weight * 10000 / 100);\n            for (var j = 0; j < weight; j++) {\n                Global.gridRandomScores.push(weights[i].id);\n            }\n        }\n    },\n\n    getSecondString: function (num) {\n        var per = 60;\n\n        if (Math.floor(num/3600) <= 0)\n            return Math.floor((num%3600)/60) + \":\" +(num%3600)%60;\n\n        return Math.floor(num/3600) + \":\" + Math.floor((num%3600)/60) + \":\" +(num%3600)%60;\n    },\n\n    getPercentString: function (socre) {\n        var perStr = 0;\n        if (socre < 1) {\n            perStr = '0%';\n        } else if (1 >= socre && socre < 500) {\n            perStr = '1%';\n        } else if (501 >= socre && socre < 1000) {\n            perStr = '3%';\n        } else if (1001 >= socre && socre < 10000) {\n            perStr = '8%';\n        } else if (10001 >= socre && socre < 20000) {\n            perStr = '15%';\n        } else if (20001 >= socre && socre < 30000) {\n            perStr = '30%';\n        } else if (30001 >= socre && socre < 40000) {\n            perStr = '55%';\n        } else if (40001 >= socre && socre < 50000) {\n            perStr = '65%';\n        } else if (50001 >= socre && socre < 60000) {\n            perStr = '75%';\n        } else if (60001 >= socre && socre < 70000) {\n            perStr = '85%';\n        } else if (70001 >= socre && socre < 80000) {\n            perStr = '88%';\n        } else if (80001 >= socre && socre < 90000) {\n            perStr = '90%';\n        } else if (90001 >= socre && socre < 100000) {\n            perStr = '95%';\n        } else {\n            perStr = '99%';\n        }\n        return perStr;\n    },\n\n    // 截屏返回 iamge base6，用于 Share\n    getImgBase64: function () {\n        let target = cc.find('Canvas');\n        let width = parseInt(target.width),\n            height = parseInt(target.height);\n        let renderTexture = new cc.RenderTexture(width, height);\n        renderTexture.begin();\n        target._sgNode.visit();\n        renderTexture.end();\n        //\n        let canvas = document.createElement('canvas');\n        let ctx = canvas.getContext('2d');\n        canvas.width = width;\n        canvas.height = height;\n        if (cc._renderType === cc.game.RENDER_TYPE_CANVAS) {\n            let texture = renderTexture.getSprite().getTexture();\n            let image = texture.getHtmlElementObj();\n            ctx.drawImage(image, 0, 0);\n        } else if (cc._renderType === cc.game.RENDER_TYPE_WEBGL) {\n            let buffer = gl.createFramebuffer();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\n            let texture = renderTexture.getSprite().getTexture()._glID;\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n            let data = new Uint8Array(width * height * 4);\n            gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, data);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            let rowBytes = width * 4;\n            for (let row = 0; row < height; row++) {\n                let srow = height - 1 - row;\n                let data2 = new Uint8ClampedArray(data.buffer, srow * width * 4, rowBytes);\n                let imageData = new ImageData(data2, width, 1);\n                ctx.putImageData(imageData, 0, row);\n            }\n        }\n        cc.log('to share');\n        return canvas.toDataURL('image/png');\n    },\n\n};\n\nmodule.exports = myUtil;"]}
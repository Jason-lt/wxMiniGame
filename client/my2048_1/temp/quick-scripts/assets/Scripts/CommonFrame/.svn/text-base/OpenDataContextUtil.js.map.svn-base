{"version":3,"sources":["OpenDataContextUtil.js"],"names":["tywx","OpenDataContextUtil","methodIndex","methodCallDic","isOnTimer","initCheckTimer","cb","checkOpenDataContextStat","Timer","setTimer","cc","director","macro","REPEAT_FOREVER","openDataContext","wx","getOpenDataContext","sharedCanvas","canvas","context","getContext","key","LOGD","JSON","stringify","NotificationCenter","trigger","EventType","GET_OPEN_DATA_RESULT_SUCCESS","GET_OPEN_DATA_RESULT_FAIL","Date","valueOf","GET_OPEN_DATA_RESULT_TIMEOUT","getUserInfo","successCallBack","failCallBack","methodName","methodId","postMessage","method","data","method_id","time","success_callback","fail_callback","updateRankData","kv","item","toString","push","kvDataList","getFriendRankData","keyList","baseList","indexOf","getGroupRankData","shareTicket"],"mappings":"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","file":"OpenDataContextUtil.js","sourceRoot":"../../../../../assets/Scripts/CommonFrame","sourcesContent":["/**\n * Created by xiaochuntian on 2018/5/28.\n */\n\n\ntywx.OpenDataContextUtil = {\n    methodIndex: 0,\n    methodCallDic: {},\n    isOnTimer: false,\n    /**\n     * 开启检查定时器\n     */\n    initCheckTimer: function() {\n        if(this.isOnTimer) return;\n        this.isOnTimer = true;\n        var cb = function() {\n            tywx.OpenDataContextUtil.checkOpenDataContextStat()\n        };\n        tywx.Timer.setTimer(cc.director, cb, 1/10, cc.macro.REPEAT_FOREVER, 0);\n    },\n\n    /**\n     * 根据请求发出的列表,检查子域数据获取情况,结果分为成功|失败|超时三种,进行回调和事件通知\n     */\n    checkOpenDataContextStat: function() {\n        var openDataContext = wx.getOpenDataContext();\n        var sharedCanvas = openDataContext.canvas;\n        var context = sharedCanvas.getContext(\"2d\");\n        for(var key in this.methodCallDic) {\n            tywx.LOGD(\"开始检查:\" + key, \"abcd\");\n            if(context[key]) {\n                if(context[key][\"status\"] == true) {\n                    //成功,有回调调回调,同时trigger事件出去\n                    tywx.LOGD(\"success_callback:\" + key, JSON.stringify(context[key]));\n                    this.methodCallDic[key][\"success_callback\"] && this.methodCallDic[key][\"success_callback\"](context[key][\"data\"]);\n                    tywx.NotificationCenter.trigger(tywx.EventType.GET_OPEN_DATA_RESULT_SUCCESS, [key, context[key][\"data\"]]);\n                } else {\n                    //失败,\n                    tywx.LOGD(\"success_callback:\" + key, JSON.stringify(context[key]));\n                    this.methodCallDic[key][\"fail_callback\"] && this.methodCallDic[key][\"fail_callback\"](context[key][\"data\"]);\n                    tywx.NotificationCenter.trigger(tywx.EventType.GET_OPEN_DATA_RESULT_FAIL, [key, context[key][\"data\"]]);\n                }\n                delete context[key];\n                delete this.methodCallDic[key];\n            } else {\n                if((new Date()).valueOf() - this.methodCallDic[key][\"time\"] > 2000) {//两秒都没返回\n                    //超时\n                    tywx.NotificationCenter.trigger(tywx.EventType.GET_OPEN_DATA_RESULT_TIMEOUT, [key]);\n                    delete context[key];\n                    delete this.methodCallDic[key];\n                }\n            }\n        }\n    },\n\n    /**\n     * 向子域请求获取用户信息\n     * @param successCallBack\n     * @param failCallBack\n     * @returns {string}\n     */\n    getUserInfo: function(successCallBack, failCallBack) {\n        var methodName = \"getUserInfo\";\n        var methodId = methodName + this.methodIndex;\n        var openDataContext = wx.getOpenDataContext();\n        openDataContext.postMessage({\n            method : methodName,\n            data : {\n                method_id: methodId\n            },\n        });\n        this.methodIndex++;\n        this.methodCallDic[methodId] = {\n            time: (new Date()).valueOf(),\n            success_callback: successCallBack,\n            fail_callback: failCallBack\n        };\n        return methodId;\n    },\n\n\n    /**\n     * 更新上报信息,更新内容由调用者传入,格式为{key1:value1,key2:value2}\n     * @param data\n     * @returns {string}\n     */\n    updateRankData: function(data) {\n        var methodName = \"updateRankData\";\n        var methodId = methodName + this.methodIndex;\n        var kv = [];\n        for(var key in data) {\n            var item = {\n                \"key\": key.toString(),\n                \"value\": data[key].toString()\n            };\n            kv.push(item)\n        }\n        var openDataContext = wx.getOpenDataContext();\n        openDataContext.postMessage({\n            method : methodName,\n            data : {\n                method_id: methodId,\n                kvDataList : kv\n            }\n        });\n        this.methodIndex++;\n        return methodId;\n    },\n\n    /**\n     * 向子域请求好友排行榜信息\n     * @param keyList\n     * @param successCallBack\n     * @param failCallBack\n     * @returns {string}\n     */\n    getFriendRankData: function(keyList, successCallBack, failCallBack) {\n        var methodName = \"getFriendRankData\";\n        var methodId = methodName + this.methodIndex;\n        var baseList = [\"avatarUrl\", \"nickName\"];\n        for(var key in baseList) {\n            if(keyList.indexOf(baseList[key]) < 0) {\n                keyList.push(baseList[key].toString());\n            }\n        }\n        var openDataContext = wx.getOpenDataContext();\n        openDataContext.postMessage({\n            method : 'getFriendRankData',\n            data : {\n                method_id: methodId,\n                keyList : keyList\n            }\n        });\n        this.methodCallDic[methodId] = {\n            time: (new Date()).valueOf(),\n            success_callback: successCallBack,\n            fail_callback: failCallBack\n        };\n        return methodId;\n    },\n\n    /**\n     * 向子域请求获取群排行榜信息\n     * @param keyList\n     * @param shareTicket\n     * @param successCallBack\n     * @param failCallBack\n     * @returns {string}\n     */\n    getGroupRankData: function(keyList, shareTicket,  successCallBack, failCallBack) {\n        var methodName = \"getFriendRankData\";\n        var methodId = methodName + this.methodIndex;\n        var baseList = [\"avatarUrl\", \"nickName\"];\n        for(var key in baseList) {\n            if(keyList.indexOf(baseList[key]) < 0) {\n                keyList.push(baseList[key].toString());\n            }\n        }\n        var openDataContext = wx.getOpenDataContext();\n        openDataContext.postMessage({\n            method : 'getGroupRankData',\n            data : {\n                method_id: methodId,\n                shareTicket: shareTicket,\n                keyList : keyList\n            }\n        });\n        this.methodCallDic[methodId] = {\n            time: (new Date()).valueOf(),\n            success_callback: successCallBack,\n            fail_callback: failCallBack\n        };\n        return methodId;\n    },\n};\n"]}
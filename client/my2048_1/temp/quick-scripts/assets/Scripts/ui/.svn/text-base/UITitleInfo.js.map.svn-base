{"version":3,"sources":["UITitleInfo.js"],"names":["ThirdAPI","require","loadAtlas","cc","Class","extends","Component","properties","buttonFlaunt","default","type","Node","buttonClose","titleName","Label","titleDescription","titleGet","titleDate","labelPropScore","iconPropScore","goldNum","showGold","onLoad","on","onClose","onFlaunt","reset","initData","string","Global","wxGold","addPropScore","n","game","saveScore","schedule","updateLabel","runAction","sequence","scaleTo","playSound","node","parent","removeChild","FBInstant","shareGame","getImgBase64","shareAsync","intent","image","text","data","myReplayData","then","dt","unschedule","target","find","width","parseInt","height","renderTexture","RenderTexture","begin","_sgNode","visit","end","canvas","document","createElement","ctx","getContext","_renderType","RENDER_TYPE_CANVAS","texture","getSprite","getTexture","getHtmlElementObj","drawImage","RENDER_TYPE_WEBGL","buffer","gl","createFramebuffer","bindFramebuffer","FRAMEBUFFER","_glID","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","rowBytes","row","srow","data2","Uint8ClampedArray","imageData","ImageData","putImageData","log","toDataURL"],"mappings":"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","file":"UITitleInfo.js","sourceRoot":"../../../../../assets/Scripts/ui","sourcesContent":["let ThirdAPI = require('../common/ThirdAPI')\nvar loadAtlas = require(\"LoadAtlas\")\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // buttonFlaunt 节点，炫耀\n        buttonFlaunt: {\n            default: null,\n            type: cc.Node\n        },\n        // buttonClose 节点，关闭\n        buttonClose: {\n            default: null,\n            type: cc.Node\n        },\n        // 成就名标签\n        titleName: {\n            default: null,\n            type: cc.Label,\n        },\n        // 成就描述标签\n        titleDescription: {\n            default: null,\n            type: cc.Label,\n        },\n        // 成就奖励标签\n        titleGet: {\n            default: null,\n            type: cc.Label,\n        },\n        // 成就日期标签\n        titleDate: {\n            default: null,\n            type: cc.Label,\n        },\n        // 星星分数标签\n        labelPropScore: {\n            default: null,\n            type: cc.Label,\n        },\n        // 星星分数图标\n        iconPropScore: {\n            default: null,\n            type: cc.Node,\n        },\n        goldNum: 0,\n        showGold: 0,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // start () {},\n\n    onLoad() {\n        // 注册按钮\n        this.buttonClose.on('click', this.onClose, this);\n        this.buttonFlaunt.on('click', this.onFlaunt, this);\n\n        this.reset();\n    },\n\n    // 初始化商店\n    initData: function (titleName, titleDescription, titleGet, titleDate) {\n        this.labelPropScore.string = Global.wxGold;\n\n        this.titleName.string = titleName;\n        this.titleDescription.string = titleDescription;\n        this.titleGet.string = '获得' + titleGet;\n        this.titleDate.string = '达成日期：' + titleDate;\n    },\n\n    // 设置分数\n    addPropScore: function (n) {\n        //console.log('星星增加', Global.wxGold, n);\n        this.showGold = Global.wxGold;\n        Global.wxGold += n;\n        //this.labelPropScore.string = Global.wxGold;\n        Global.game.saveScore();\n\n        //this.reset();\n        this.goldNum = Global.wxGold;\n        this.schedule(this.updateLabel, 0.18);\n\n        this.iconPropScore.runAction(\n            cc.sequence(cc.scaleTo(0.5, 1.2), cc.scaleTo(0.5, 1.0), cc.scaleTo(0.5, 1.2), cc.scaleTo(0.5, 1.0)));\n    },\n\n    // 按钮回调：关闭\n    onClose: function () {\n        Global.game.playSound('btn', 0.1);\n        //console.log(\"关闭成就查看\");\n\n        if (this.node.parent) {\n            this.node.parent.removeChild(this.node);\n        }\n    },\n\n    // 按钮回调：炫耀\n    onFlaunt: function () {\n        Global.game.playSound('btn', 0.1);\n        //console.log(\"成就炫耀\");\n        Global.game.playSound('btn', 0.1);\n        if (typeof FBInstant !== 'undefined') {\n            ThirdAPI.shareGame(this.getImgBase64());\n        } else {\n            ThirdAPI.shareGame('randomImg', null, null, '244');\n        }\n\n        return;\n        if (typeof FBInstant === 'undefined') return;\n        FBInstant.shareAsync({\n            intent: 'SHARE',\n            image: this.getImgBase64(),\n            text: 'Protect Tetris2048！',\n            data: {\n                myReplayData: '...'\n            },\n        }).then(() => {\n            // continue with the game.\n        });\n    },\n\n    updateLabel(dt) {\n        if (this.showGold >= this.goldNum) {\n            this.unschedule(this.updateLabel);\n            return;\n        }\n\n        this.showGold += 1;\n        this.labelPropScore.string = this.showGold;\n    },\n\n    reset: function () {\n        this.goldNum = 0;\n        this.showGold = -1;\n    },\n\n    // 截屏返回 iamge base6，用于 Share\n    getImgBase64: function () {\n        let target = cc.find('Canvas');\n        let width = parseInt(target.width),\n            height = parseInt(target.height);\n        let renderTexture = new cc.RenderTexture(width, height);\n        renderTexture.begin();\n        target._sgNode.visit();\n        renderTexture.end();\n        //\n        let canvas = document.createElement('canvas');\n        let ctx = canvas.getContext('2d');\n        canvas.width = width;\n        canvas.height = height;\n        if (cc._renderType === cc.game.RENDER_TYPE_CANVAS) {\n            let texture = renderTexture.getSprite().getTexture();\n            let image = texture.getHtmlElementObj();\n            ctx.drawImage(image, 0, 0);\n        } else if (cc._renderType === cc.game.RENDER_TYPE_WEBGL) {\n            let buffer = gl.createFramebuffer();\n            gl.bindFramebuffer(gl.FRAMEBUFFER, buffer);\n            let texture = renderTexture.getSprite().getTexture()._glID;\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n            let data = new Uint8Array(width * height * 4);\n            gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, data);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            let rowBytes = width * 4;\n            for (let row = 0; row < height; row++) {\n                let srow = height - 1 - row;\n                let data2 = new Uint8ClampedArray(data.buffer, srow * width * 4, rowBytes);\n                let imageData = new ImageData(data2, width, 1);\n                ctx.putImageData(imageData, 0, row);\n            }\n        }\n        cc.log('to share');\n        return canvas.toDataURL('image/png');\n    },\n});"]}